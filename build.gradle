plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.periferia.hackaton.mutantes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.code.gson:gson:2.10.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testImplementation 'org.mockito:mockito-core:4.3.1'
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
		classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
	}
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled = true
		html.enabled = true
		csv.enabled = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	beforeEvaluate {
		getClassDirectories().from(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com/periferia/hackaton/mutantes/adn/infraestructure/rest/dto/*.class',
					'com/periferia/hackaton/mutantes/adn/infraestructure/config/*.class',
			])
		}))
	}
}

jacoco {
	toolVersion = "0.8.7"
	reportsDir = (file("$buildDir/jacoco"))
}


jacocoTestCoverageVerification {
	violationRules {
		rule {
			includes = ['com/periferia/hackaton/mutantes/adn/*']
			excludes = [
					'com/periferia/hackaton/mutantes/adn/infraestructure/rest/dto/*',
					'com/periferia/hackaton/mutantes/adn/infraestructure/config/*',
					'com/periferia/hackaton/mutantes/adn/domain/events/*',
					'com/periferia/hackaton/mutantes/adn/domain/exceptions/*',
					'com/periferia/hackaton/mutantes/adn/domain/entities/*',
			]
			limit {
				minimum = 0.85
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
